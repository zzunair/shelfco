{% if type=='product-widget' %}
	{% if product.selling_plan_groups.size > 0 %}
		{% assign current_variant = product.selected_or_first_available_variant %}
		<input type="hidden" name="variant-id" value="{{current_variant.id}}">
		<input type="hidden" name="product-id" value="{{product.id}}">
		<input type="hidden" name="p-selected-selling-plan-id" value="{{product.selected_selling_plan.id}}"/>
		<input type="hidden" name="v-selected-selling-plan-id" value="{{current_variant.selected_selling_plan_allocation.selling_plan.id | json  | default: ''}}"/>
		<fieldset
          id="loop-widget-fieldset"
          data-current-variant-id="{{current_variant.id}}"
          data-current-selling-plan-id="{{product.selected_selling_plan.id}}"
          data-current-selling-plan-name="{{product.selected_selling_plan.name}}"
        >
          <legend>Purchase Options</legend>
          
          {% unless product.requires_selling_plan %}
          	<div class="spg-grid" name="spg-one-time-purchase">
              <input type="radio" name="loop_purchase_option" id="loop-one-time-purchase"
				{% unless product.selected_selling_plan %}checked{% endunless %}
				>
              <label for="loop-one-time-purchase">One time Purchase</label>
              {% for variant in product.variants %}
                <div class="spg-price" name="variant-price" data-spg-variant-ids="{{variant.id}}">
                  {{-variant.price | money -}}
                  <span> each</span>
              	</div>
              {% endfor %}
              	
          	</div>
          {% endunless %}
          {% comment %} this will be taken from URL {% endcomment %}
          {% assign selected_selling_plan = product.selected_selling_plan %} 
          {% for spg in product.selling_plan_groups %}
<!--           <h2>{{spg.name }}</h2> -->
          	<input type="hidden" name="spg" id="spg-{{spg.id}}" value="{{spg | json}}">
          	<div class="spg-grid"
                 data-spg-variant-ids="{%- for variant in product.variants -%}
                 {%- assign isVariantPresent = false -%}
				 {%- for v-plan in variant.selling_plan_allocations -%}
					{%- if v-plan.selling_plan_group_id == spg.id -%}
						{%- assign isVariantPresent = true -%}
						{%- break -%}
					{%- endif -%}
				 {%- endfor -%}
                 {%- if isVariantPresent -%}{{variant.id}},{%- endif -%}
                 {%- endfor -%}"
                 >
              <input type="radio" class="spg-radio-input" name="loop_purchase_option" id="loop-spg-{{spg.id}}-{{spg.selling_plans[0].id}}-{{spg.selling_plans[0].name}}"
              {% if spg.selling_plan_selected %}checked{% endif %}
				>
              <label for="loop-spg-{{spg.id}}-{{spg.selling_plans[0].id}}-{{spg.selling_plans[0].name}}">{{spg.name}}</label>
              {% for variant in product.variants %}
              	{% for v_sp in variant.selling_plan_allocations %}
              		{% if v_sp.selling_plan_group_id != spg.id %}
                    	{% continue %}
              		{% endif %}
              		<div
                      class="spg-price" data-spg-variant-ids="{{variant.id}}"
                      data-selling-plan-id="{{ v_sp.selling_plan.id }}"
                    >
                    	{{- v_sp.per_delivery_price | money -}}
                    	<span > each</span>
             		</div>
              	{% endfor %}
              {% endfor %}
              <div class="spg-select-options">
              <label for="spg-select-{{spg.id}}">{{spg.options[0].name}}</label>
              <select id="spg-select-{{spg.id}}">
                {% for s_plan in spg.selling_plans %}
                	
                	<option data-selling-plan-name="{{s_plan.name}}" {% if s_plan.selected %} selected{% endif %} value="{{s_plan.id}}">{{s_plan.description}}</option>
                {% endfor %}
              </select>
              </div>
          	</div>
          {% endfor %}
		</fieldset>
	{% endif %}
  <script type="text/javascript">
  console.log("in hereeeeeeeeeeeeeeeeee");
  console.log("WINDOW HREF", window.location.href);
  const elem = [];
  
  function updateWidgetCurrentVariant(id) {
    console.log("updateWidgetCurrentVariant");
    var _widget = document.getElementById("loop-widget-fieldset");
    _widget.dataset.currentVariantId = id;
//     _widget.style.display = 'block';
  }
  
  function updateWidgetCurrentSellingPlan(id, name) {
    console.log("updateWidgetCurrentSellingPlan");
    var _widget = document.getElementById("loop-widget-fieldset");
    _widget.dataset.currentSellingPlanId = id;
    _widget.dataset.currentSellingPlanName = name;
//     _widget.style.display = 'block';
  }
  
  function addSubscriptionToCartFunctionality(type, el) {
    var add_to_cart_btn = document.querySelector("button[type='submit'][name='add']");
    console.log(add_to_cart_btn);
    if(type==="S") {
      
      add_to_cart_btn.textContent = "Add subscription to cart";
      console.log("ITS A SELLING PLAN. CHANGE THE MF URL NOW", el.target.id);
      let sp_id = el.target.id.split("-")[3];
      let sp_name = el.target.id.substring(el.target.id.indexOf(sp_id)+sp_id.length+1);
      var _widget = document.getElementById("loop-widget-fieldset");
      _widget.dataset.currentSellingPlanId = sp_id;
      _widget.dataset.currentSellingPlanName = sp_name;
      var _url = new URL(window.location);
      _url.searchParams.set('selling_plan', sp_id);
      history.pushState(null, null, _url);
      
      add_to_cart_btn.onclick = function(){
        console.log("CLICKED SUBSSSSSSSSSSS");
        let qty_input_qs = ["[id=Quantity]","[id=quantity]","[name=quantity]"];
        let qty_input = document.querySelector(qty_input_qs.toString());
        let qty = parseInt(qty_input?.value);
        let _url = new URL(window.location);
        var _widget = document.getElementById("loop-widget-fieldset");
		let vari_id = _widget.dataset.currentVariantId || _url.searchParams.get('variant');
        let sp_id = _widget.dataset.currentSellingPlanId || _url.searchParams.get('selling_plan');
        
        if(sp_id?.length && vari_id?.length)
        {
          
          let formData = {
          'items': [{
              'id': vari_id,
            'quantity': qty ? qty : 1,
              'selling_plan': sp_id,
            }]
          };

          fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
          })
          .then(response => {
            return response.json();
          })
          .catch((error) => {
            console.error('Error:', error);
          });
        }
      }
  	}
    else {
      add_to_cart_btn.textContent = "Add to cart";
    }
  }
  
  var firstTimeUrl = document.URL;
  
  (function checkIfSubs(){
    
    var url = new URL(firstTimeUrl);
    var isSpUrl = url.searchParams.get("selling_plan");
    
    var el = document.querySelector("input[id=loop-one-time-purchase]");
    el.checked = true;
    
  })();
  
  console.log('First time url', firstTimeUrl);
  document.addEventListener('change', function() {
    var currentPageUrl = document.URL;
    var url = new URL(currentPageUrl);
    var isVariantUrl = url.searchParams.get("variant");
    currentPageUrl = isVariantUrl ? currentPageUrl : isVariantUrl;
    console.log('curr page url', currentPageUrl);
    if(currentPageUrl && firstTimeUrl != currentPageUrl) {
      firstTimeUrl = currentPageUrl;
      console.log('variant_id: '+isVariantUrl+'');
      updateWidgetCurrentVariant(isVariantUrl);
    }
  });
  
  var spg = Array.from(document.querySelectorAll("input[name=loop_purchase_option]"));
  spg.forEach(el => el.addEventListener(
    'change', (el) => { 
    
	if(el.target.id!="loop-one-time-purchase")
    {
     
      addSubscriptionToCartFunctionality("S", el); //S for subscription
      
    }
      else {
        addSubscriptionToCartFunctionality("N", el); //N for normal
    }
	}));
  
  //handle <select> change in selling plan
  var sp_selects = Array.from(document.querySelectorAll("[id*=spg-select]"));
  sp_selects.forEach(el => el.addEventListener(
    'change', (e) => {
      console.log("SP VALUE", e.target.value, e.target.selectedIndex, e.target.options)
      sp_id = e.target.value;
      var _url = new URL(window.location);
      _url.searchParams.set('selling_plan', sp_id);
      var _widget = document.getElementById("loop-widget-fieldset");
      var vari_id = _widget.dataset.currentVariantId || _url.searchParams.get('variant');
      window.history.pushState({}, '', _url);
      var sp_name = e.target.options[e.target.selectedIndex].dataset.sellingPlanName;
      updateWidgetCurrentSellingPlan(sp_id, sp_name);
      //change product template price value
      var theme_price_element_qs = [".price-item.price-item--regular",".product-single__price"]
      var theme_price_element = document.querySelectorAll(theme_price_element_qs.toString());
      var new_price = document.querySelector(`[data-selling-plan-id='${sp_id}'][data-spg-variant-ids='${vari_id}']`).childNodes[0]
      theme_price_element.forEach(el => el.textContent = new_price.textContent);
    }
    ));
  
  //whenever radio input of one time purchase is selected remove selling_plan query parameter from URL
  var r_ip_otp = document.getElementById("loop-one-time-purchase");
  r_ip_otp.onclick = function() {
    var params = new  URLSearchParams(window.location.search);
    params.delete("selling_plan");
    var _widget = document.getElementById("loop-widget-fieldset");
    _widget.dataset.currentSellingPlanId = "";
    _widget.dataset.currentSellingPlanName = "";
    window.history.replaceState({}, '', `${window.location.pathname}?${params}`);
    
  }
  function addCartNotifListener(callback) {
    let cart_notif_qs = [".cart-popup-wrapper.critical-hidden.cart-popup-wrapper--hidden"];
    q = document.querySelector(cart_notif_qs.toString());
    done = false;
    window.setInterval(()=> {
        if(!done && q && q.className.indexOf("--hidden")==-1 && q.className.indexOf("is-transition")==-1)
        {
          callback();
          console.log('HEre');
          done = true;
        }
        else if(done && q && q.className.indexOf("--hidden")!=-1) {
          done=false;
        }
	  }, 100)
  }
  
  addCartNotifListener(
    () => {
    	let _data = document.querySelector("fieldset[id='loop-widget-fieldset'").dataset;
  		let sp_name = _data.currentSellingPlanName;
  		
  		let cart_notif_ul_qs = ["[data-cart-popup-product-details]"];
        let _ul = document.querySelector(cart_notif_ul_qs.toString());
  		let a = _ul.lastElementChild;
  		new_li = a ?  a.cloneNode(true) : document.createElement("LI");
		new_li.innerText = sp_name;
  		_ul.removeAttribute("hidden");
  		_ul.appendChild(new_li);
  		
	}
  );
//   function callMe() {
//     console.log('changed', window.location.href, window.location)
// //     cosnt newLoc = window.location;
// //     console.log('new changed', newLoc.href);
//     const urlParams = new URLSearchParams(window.location.search);
// 	const myVariant = urlParams.get('variant');
//     console.log('Got variant', myVariant);
//   }
  function toggle() {    
  console.log('clicked');
    var g = document.getElementById('toggleDemo');
    g.dataset.sId=((parseInt(g.dataset.sId)+1)%3).toString();
  }
</script>
<style id="loop-widget-styles">
  .spg-grid {
    display: grid;
    grid-template-columns: auto 1fr auto;
    align-items: center;
    grid-gap: 10px;
    grid-template-areas: "radio-ip label price";
  }
  
  .spg-grid .plan-option {
    background-color: yellow;
  }
  {% for variant in product.variants %}
  	[data-spg-variant-ids*="{{ variant.id }}"] {
      display: none;
    }
  
    {% if variant.selling_plan_allocations.size == 0 %}
      [data-current-variant-id="{{ variant.id }}"] {
        display: none;
      }
    {% else %}
    [data-current-variant-id="{{ variant.id }}"] {
        display: block;
      }
    {% endif %}
  
    [data-current-variant-id="{{variant.id}}"] .spg-grid[data-spg-variant-ids*="{{variant.id}}"] {
      display: grid;
    }
  
  	[data-current-variant-id="{{variant.id}}"] .spg-price[data-spg-variant-ids="{{variant.id}}"] {
  		display: block;
  	}
  {% endfor %}
  
  {% for spg in product.selling_plan_groups %}
    {% for sp in spg.selling_plans %}
      [data-selling-plan-id="{{ sp.id }}"] {
      	visibility: hidden;
      }
      [data-current-selling-plan-id="{{ sp.id }}"] .spg-price[data-selling-plan-id="{{ sp.id }}"] {
      	visibility: visible;
      }
    {% endfor %}
  {% endfor %}
  .spg-price {
    display: none;
    grid-area: price;
  }
  
  .spg-radio-input:not(:checked) ~ .spg-select-options {
    display: none;
  }
  
  .spg-select-options {
    grid-column: 1 / -1;
    display: grid;
  }

</style>

{%- elsif type == 'customer-portal-link' -%}
  <a href="/a/loop_subscriptions/customer?customer_id={{customer.id}}&sdomain={{shop.domain}}&sname={{shop.name}}" id="loop-subscriptions-customer-portal-link">
    <button class="btn" style="padding: 2px 20px">My Subscription</button>
  </a>
{%- endif -%}