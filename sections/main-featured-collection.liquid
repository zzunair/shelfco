{% comment %}
  Featured collection section
{% endcomment %}

{%- liquid
  assign _colClassLayout = 'container'
  assign _colClass = 'col-md-4 col-lg-4 col-sm-6 col-xs-6'
  assign product_class = 'item collection-product'
  assign product_limit = section.settings.products_to_limit | escape
-%}

<section
  id="{{ section.id }}"
  class="section-{{ section.id }}-padding collection-row"
  data-section-id="{{ section.id }}"
  data-section-type="home-products"
  tabindex="0"
>
  <div class="{{ _colClassLayout }} slider-loader">
    <div class="products-on-page slider-parent wow fadeIn" data-wow-delay="300ms">
      <div class="col-md-12 slider-load px-0">
        {% if section.settings.section_header != blank %}
          <div class="featured-collection-title-tabs text-left pt-0 mb-3">
            <h2 class="mb-0">{{ section.settings.section_header }}</h2>
            <ul class="featured-collection-tabs">
              {% for block in section.blocks %}
                {% assign collection = block.settings.collection %}
                {% style %}
                  {% if collection != blank %}
                  @media (max-width: 767px) {
                    .featured-collection-title-tabs {
                        flex-direction: column;
                        align-items: baseline;
                        gap: 15px;
                      }
                    {% else %}
                    .featured-collection-title-tabs {
                        flex-direction: unset;
                        align-items: baseline;
                        gap: 0px;
                      }
                    }
                  {% endif %}
                  {% endstyle %}
                <li>
                  <h4>
                    <a
                      class="focus-inset {% if forloop.first %}active{% endif %}"
                      href="{{ collection.url }}"
                      tabindex="0"
                      data-tab="{{ collection.handle }}-{{ block.id }}"
                    >
                      {{ collection.title }}
                    </a>
                  </h4>
                </li>
              {% endfor %}
            </ul>
          </div>
        {% endif %}
        <div class="slider-container multiple mobile-ready-padding" tabindex="-1">
          {% for block in section.blocks %}
            {% assign collection = block.settings.collection %}
            <div
              class="featured-collection row featured-collection-{{ collection.handle }}-{{ block.id }} {% if forloop.first == false %} hidden {% endif %} pt-0 row"
              id="id_{{ section.id }}"
              tabindex="-1"
            >
              {% for product in collection.products limit: product_limit %}
                {% render 'product-card',
                  collection: collection,
                  product: product,
                  product_class: product_class,
                  _colClass: _colClass,
                  show_rating: section.settings.show_rating,
                  show_second_img: section.settings.show_secondary_image
                %}
              {% else %}
                {% for i in (1..3) %}
                  <div class="col-lg-4 col-md-4">
                    {% render 'product-card-placeholder' %}
                  </div>
                {% endfor %}
              {% endfor %}
            </div>
            <div class="controls controls-{{ collection.handle }}-{{ block.id }} {% if forloop.first == false %} hidden {% endif %}">
              <button role="button" aria-label="Previous" class="glider-prev prev-btn">{% render 'icon-prev' %}</button>
              <button role="button" aria-label="Next" class="glider-next next-btn">{% render 'icon-next' %}</button>
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Featured collection",
  "class": "main-featured-collection",
  "settings": [
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 20
    },
    {
      "type": "text",
      "id": "section_header",
      "label": "Heading",
      "default": "Featured collection"
    },
    {
      "id": "products_to_limit",
      "type": "range",
      "min": 3,
      "max": 12,
      "step": 1,
      "default": 3,
      "label": "Products to show"
    },
    {
      "type": "header",
      "content": "Product Card"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "label": "Image ratio",
      "default": "adapt",
      "options": [
        {
          "value": "adapt",
          "label": "Adapt to image"
        },
        {
          "value": "square",
          "label": "Square"
        }
      ],
      "default": "square"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "Show second image on hover"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "Show product rating",
      "info": "To display a rating, add a product rating app."
    }
  ],
  "max_blocks": 3,
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Pick a collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Featured collection",
      "category": "Content",
      "blocks": [
        {
         "type": "collection"
        }
      ]
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener("DOMContentLoaded", function() {
    featuredCollectionSliderSectionInit{{ section.id | replace: '-','_' }}();
  });
  document.addEventListener("shopify:section:load", function(event) {
    if(event.detail.sectionId === '{{ section.id }}') {
      featuredCollectionSliderSectionInit{{ section.id | replace: '-','_' }}();
    }
  });
  document.addEventListener("shopify:section:unload", function(event) {
    if(event.detail.sectionId === '{{ section.id }}') {
      featuredCollectionSliderSectionInit{{ section.id | replace: '-','_' }}();
    }
  });
  document.addEventListener("shopify:section:reorder", function(event) {
    if(event.detail.sectionId === '{{ section.id }}') {
      featuredCollectionSliderSectionInit{{ section.id | replace: '-','_' }}();
    }
  });
  window.addEventListener('shopify:section:load', function(event) {
    if (event.detail.sectionId === '{{ section.id }}') {
      featuredCollectionSliderSectionInit{{ section.id | replace: '-','_' }}();
    }
  });
  function featuredCollectionSliderSectionInit{{ section.id | replace: '-','_' }}() {
    var tabs = document.querySelectorAll('#{{ section.id }} .featured-collection-tabs li a');
    if (tabs.length > 0) {
      tabs.forEach(function(tab, i) {
        var collSl = document.querySelector('#{{ section.id }} .featured-collection-' + tab.dataset.tab);
        var control = document.querySelector('#{{ section.id }} .controls-' + tab.dataset.tab);
        if (i == 0) {
          if (collSl != null && control != null) {
            featuredCollectionSlider{{ section.id | replace: '-','_' }}('#{{ section.id }} .featured-collection-' + tab.dataset.tab, '.controls-' + tab.dataset.tab);
          }
        }
        tab.onclick = function(e) {
          e.preventDefault();
          tabs.forEach(function(tab) {
            tab.classList.remove('active');
            var collSl = document.querySelector('#{{ section.id }} .featured-collection-' + tab.dataset.tab);
            var control = document.querySelector('#{{ section.id }} .controls-' + tab.dataset.tab);
            if (collSl != null && control != null) {
              collSl.classList.add('hidden');
              control.classList.add('hidden');
            }
          });
          tab.classList.add('active');
          if (collSl != null && control != null) {
            collSl.classList.remove('hidden');
            control.classList.remove('hidden');
            collSl.classList.remove('px-0');
            featuredCollectionSlider{{ section.id | replace: '-','_' }}('#{{ section.id }} .featured-collection-' + tab.dataset.tab, '.controls-' +
              tab.dataset.tab);
          }
        }
      });
    }
  }
  function featuredCollectionSlider{{ section.id | replace: '-','_' }}(selector, controls) {
    if (selector != null) {
      var element = document.querySelector(selector);
      // Layout adjustmenst for tiny slider init
      var elementRef = document.querySelector('#{{ section.id }} .slider-loader');
      var elementRefTitle = document.querySelector('#{{ section.id }} .featured-collection-title-tabs');
      elementRef.classList.add('px-0');
      elementRefTitle.classList.add('container');
      element.classList.remove('row');
      // END Layout adjustmenst for tiny slider init

      //select all slider parents
      var slider = tns({
        container: selector,
        items: 1,
        slideBy: '1',
        nav: false,
        speed: 400,
        mode: 'carousel',
        prevButton: controls + ' .prev-btn',
        nextButton: controls + ' .next-btn',
        navPosition: 'bottom',
        autoplayButtonOutput: false,
        mouseDrag: true,
        autoplay: false,
        controls: true,
        freezable: true,
        touch: false,
        mouseDrag: false,
        preventScrollOnTouch: 'true',
        rewind: true,
        lazyload: true,
        center: false,
        loop: false,
        controlsContainer: controls,
        onInit(info) {
          info.controlsContainer.setAttribute('tabindex', -1);
          info.nextButton.setAttribute('tabindex', -1);
          info.prevButton.setAttribute('tabindex', -1);
        },
        responsive: {
          480: {
            items: 1,
          },
          640: {
            items: 2,
          },
          768: {
            items: 3,
          }
        }
      });
    }
  }
</script>

{% style %}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  ul.featured-collection-tabs {
      list-style-type: none;
      margin: 0;
  }
  ul.featured-collection-tabs li {
      display: inline-block;
      margin-left: 15px;
  }
  @media (min-width: 768px) {
    .featured-collection-title-tabs {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
    }
  }
  ul.featured-collection-tabs li a {
      opacity: 0.5;
  }
  ul.featured-collection-tabs li a.active {
      opacity: 1;
  }
  @media (max-width: 767px) {
    ul.featured-collection-tabs {padding-left: 0;}
    ul.featured-collection-tabs li {
        margin-left: 0;
        margin-right: 15px;
    }
  }
{% endstyle %}
