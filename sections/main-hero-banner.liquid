{% comment %}
  Image comparison section
{% endcomment %}

<div id="{{ section.id }}" class="section-{{ section.id }}-padding wow fadeIn" data-wow-delay="300ms">
  <div class="container carousel-inner">
    {% for block in section.blocks %}
      {% assign hero_image_before = block.settings.hero_image_before %}
      {% assign hero_image_after = block.settings.hero_image_after %}
      <!-- before and after -->
      {% if hero_image_before == blank and hero_image_after == blank %}
        {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg border-0 rounded__all' }}
      {% else %}
        <div id="image-compare" class="rounded__all">
          {% if hero_image_before != blank %}
            {{
              hero_image_before
              | image_url: width: 2048
              | image_tag:
                class: 'img-fluid lazyload',
                widths: '750, 1000, 1200, 1400, 1600, 1800, 2200, 2400',
                height: hero_image_before.height,
                width: hero_image_before.width,
                loading: 'lazy',
                alt: hero_image_before.alt
              | escape
            }}
          {% endif %}
          {% if hero_image_after != blank %}
            {{
              hero_image_after
              | image_url: width: 2048
              | image_tag:
                class: 'img-fluid lazyload position-absolute image-after d-none',
                widths: '750, 1000, 1200, 1400, 1600, 1800, 2200, 2400',
                height: hero_image_after.height,
                width: hero_image_after.width,
                loading: 'lazy',
                alt: hero_image_after.alt
              | escape
            }}
          {% endif %}
        </div>
      {% endif %}
      <!-- /before and after -->
    {% endfor %}
  </div>
</div>

{% schema %}
{
  "name": "Image comparison",
  "class": "main-image-comparison",
  "max_blocks": 1,
  "settings": [
    {
      "type": "header",
      "content": "Settings",
      "info": "You can change the 'Before' and 'After' labels by editing the default theme content."
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 20
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Images",
      "settings": [
        {
          "type": "image_picker",
          "id": "hero_image_before",
          "label": "Before image (2200 x 795px .jpg recommended)"
        },
        {
          "type": "image_picker",
          "id": "hero_image_after",
          "label": "After image (2200 x 795px .jpg recommended)"
        }
      ]
    }
  ],
  "presets": [
    {
     "name": "Image comparison",
      "category": "Content",
      "settings": {
  		},
      "blocks": [
          {
           "type": "image",
  		     "settings": {
              "hero_image_before": "",
              "hero_image_after": ""
    		    }
          }
        ]
      }
    ]
  }
{% endschema %}

<script>
document.addEventListener("DOMContentLoaded", function() {
  if (document.querySelector('#image-compare') != null) {
    const options = {
      // UI Theme Defaults
      controlColor: "#ffffff",
      controlShadow: true,
      addCircle: true,
      addCircleBlur: true,
      // Label Defaults
      showLabels: true,
      labelOptions: {
        before: `${window.theme.before}`,
        after: `${window.theme.after}`,
        onHover: false
      },
      // Smoothing
      smoothing: true,
      smoothingAmount: 300,
      // Other options
      hoverStart: false,
      verticalMode: false,
      startingPoint: 50,
      fluidMode: true
    };
    //element
    const viewers = document.querySelectorAll("#image-compare");
    const afterImage = document.querySelector(".image-after");

    //mount all elements
    viewers.forEach((element) => {
      let view = new ImageCompare(element, options).mount();
    });

    //this will prevent the section from unloading when the section is changed via the theme editor
    window.addEventListener('shopify:section:load', function(event) {
      if (event.detail.sectionId === '{{ section.id }}') {
        if (document.querySelector('#image-compare') != null) {
          //element
          const viewers = document.querySelectorAll("#image-compare");
          //mount all elements
          viewers.forEach((element) => {
            let view = new ImageCompare(element, options).mount();
            afterImage.classList.remove('d-none');
          });
        };
      };
    });
  }
});
</script>

{% style %}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{% endstyle %}
