<link rel="stylesheet" href="{{ 'PDP-featured-collection.css' | asset_url }}">
<section class="cs-featured-collection mb-5 mt-5">
    <h2 class="section-heading">
        <span>Featured Collection</span>
    </h2>
    <div class="featured-slider-container">
      {% comment %} <button class="prev-arrow slick-arrow">&#8249;</button> {% endcomment %}
      <div class="featured-slider-wrapper">
        <div class="products-slider slick-slider">
            {%- for product in section.settings.collection.products -%}
          <div class="slick-slide">
            <div class="card hover-transition">
              <div class="card-image">
                <img 
                  src="{{ product.featured_image | img_url: 'master' }}" 
                  alt="{{ product.title }}"
                  class="product-image"
                  data-default-image="{{ product.featured_image | img_url: 'master' }}"
                >
              </div>
              
              <div class="card-info">
                
                <h5>{{ product.title }}</h5>
                <p>{{ product.price | money }}</p>
                <div class="atc-btn">
                  <button id="add-to-cart-btn" class="global-btn" onclick="addToCart({{ product.selected_or_first_available_variant.id }})">
                    <span class="button-text">Add to Cart</span>
                    <span class="button-loader"></span>
                  </button>
                </div>
              </div>
            </div>
          </div>
          {%- endfor -%}
        </div>
      </div>
      
    </div>
</section>


<script>
  $(document).ready(function () {
    var featuredSlider = $('.products-slider.slick-slider');

    featuredSlider.slick({
      slidesToShow: 5,
      slidesToScroll: 1,
      infinite: false,
      arrows: false,
      dots: true,
      initialSlide: 0,
      responsive: [
        {
          breakpoint: 768,
          settings: {
            slidesToShow: 1,
            slidesToScroll: 1
          }
        }
      ]
    });

    $('.cs-featured-collection .slick-list').css({
      'transition': 'transform 0.3s ease-out'
    });

    function handleTransform() {
      if (window.innerWidth > 1024) {
        // $('.cs-featured-collection .slick-list').css('transform', 'translate3d(17%, 0px, 0px)');
      } else {
        $('.cs-featured-collection .slick-list').css('transform', 'translate3d(0, 0px, 0px)');
      }
    }

    handleTransform();

    $('.cs-featured-collection .slick-next').on('click', function () {
      $('.cs-featured-collection .slick-list').css('transform', 'translate3d(0, 0px, 0px)');
    });

  });


  function addToCart(variantId) {
    const button = event.currentTarget;
    button.classList.add('loading');

    fetch('/cart/add.js', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            items: [{
                id: variantId,
                quantity: 1
            }]
        })
    })
    .then(response => response.json())
    .then(data => {
        // Handle success
        // fetchCartData(); // If you have this function to update cart count
        console.log("Added to cart");
    })
    .catch(error => {
        console.error('Error:', error);
    })
    .finally(() => {
        button.classList.remove('loading');
    });
}
</script>


{% schema %}
  {
    "name": "PDP Featured Collection",
    "settings": [
        {
            "type": "collection",
            "id": "collection",
            "label": "Select Collection"
        },
        {
          "type": "range",
          "id": "numberOfSlides",
          "min": 3,
          "max": 6,
          "step": 1,
          "label": "Show Number of Slides",
          "default": 4
        }
    ],
    "presets": [
      {
        "name": "PDP Featured Collection",
        "settings": {
        }
      }
    ]
  }
{% endschema %}